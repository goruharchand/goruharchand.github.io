{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog/blog.component.css","webpack:///./src/app/blog/blog.component.html","webpack:///./src/app/blog/blog.component.ts","webpack:///./src/app/capitalize.pipe.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/create-employee/create-employee.component.css","webpack:///./src/app/create-employee/create-employee.component.html","webpack:///./src/app/create-employee/create-employee.component.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/leftsidebar/leftsidebar.component.css","webpack:///./src/app/leftsidebar/leftsidebar.component.html","webpack:///./src/app/leftsidebar/leftsidebar.component.ts","webpack:///./src/app/our-team/our-team.component.css","webpack:///./src/app/our-team/our-team.component.html","webpack:///./src/app/our-team/our-team.component.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/rightsidebar/rightsidebar.component.css","webpack:///./src/app/rightsidebar/rightsidebar.component.html","webpack:///./src/app/rightsidebar/rightsidebar.component.ts","webpack:///./src/app/services/services.component.css","webpack:///./src/app/services/services.component.html","webpack:///./src/app/services/services.component.ts","webpack:///./src/app/shared/confirm-equal-validator.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n/* stylelint-disable selector-list-comma-newline-after */\\r\\n\\r\\n.blog-header {\\r\\n    line-height: 1;\\r\\n    border-bottom: 1px solid #e5e5e5;\\r\\n  }\\r\\n\\r\\n.blog-header-logo {\\r\\n    font-family: \\\"Playfair Display\\\", Georgia, \\\"Times New Roman\\\", serif;\\r\\n    font-size: 2.25rem;\\r\\n  }\\r\\n\\r\\n.blog-header-logo:hover {\\r\\n    text-decoration: none;\\r\\n  }\\r\\n\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n    font-family: \\\"Playfair Display\\\", Georgia, \\\"Times New Roman\\\", serif;\\r\\n  }\\r\\n\\r\\n.display-4 {\\r\\n    font-size: 2.5rem;\\r\\n  }\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .display-4 {\\r\\n      font-size: 3rem;\\r\\n    }\\r\\n  }\\r\\n\\r\\n.nav-scroller {\\r\\n    position: relative;\\r\\n    z-index: 2;\\r\\n    height: 2.75rem;\\r\\n    overflow-y: hidden;\\r\\n  }\\r\\n\\r\\n.nav-scroller .nav {\\r\\n    display: flex;\\r\\n    flex-wrap: nowrap;\\r\\n    padding-bottom: 1rem;\\r\\n    margin-top: -1px;\\r\\n    overflow-x: auto;\\r\\n    text-align: center;\\r\\n    white-space: nowrap;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n  }\\r\\n\\r\\n.nav-scroller .nav-link {\\r\\n    padding-top: .75rem;\\r\\n    padding-bottom: .75rem;\\r\\n    font-size: .875rem;\\r\\n  }\\r\\n\\r\\n.card-img-right {\\r\\n    height: 100%;\\r\\n    border-radius: 0 3px 3px 0;\\r\\n  }\\r\\n\\r\\n.flex-auto {\\r\\n    flex: 0 0 auto;\\r\\n  }\\r\\n\\r\\n.h-250 { height: 250px; }\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .h-md-250 { height: 250px; }\\r\\n  }\\r\\n\\r\\n/*\\r\\n   * Blog name and description\\r\\n   */\\r\\n\\r\\n.blog-title {\\r\\n    margin-bottom: 0;\\r\\n    font-size: 2rem;\\r\\n    font-weight: 400;\\r\\n  }\\r\\n\\r\\n.blog-description {\\r\\n    font-size: 1.1rem;\\r\\n    color: #999;\\r\\n  }\\r\\n\\r\\n@media (min-width: 40em) {\\r\\n    .blog-title {\\r\\n      font-size: 3.5rem;\\r\\n    }\\r\\n  }\\r\\n\\r\\n/* Pagination */\\r\\n\\r\\n.blog-pagination {\\r\\n    margin-bottom: 4rem;\\r\\n  }\\r\\n\\r\\n.blog-pagination > .btn {\\r\\n    border-radius: 2rem;\\r\\n  }\\r\\n\\r\\n/*\\r\\n   * Blog posts\\r\\n   */\\r\\n\\r\\n.blog-post {\\r\\n    margin-top: 20px;  \\r\\n    margin-bottom: 4rem;\\r\\n  }\\r\\n\\r\\n.blog-post-title {\\r\\n    margin-bottom: .25rem;\\r\\n    font-size: 2.5rem;\\r\\n  }\\r\\n\\r\\n.blog-post-meta {\\r\\n    margin-bottom: 1.25rem;\\r\\n    color: #999;\\r\\n  }\\r\\n\\r\\n/*\\r\\n   * Footer\\r\\n   */\\r\\n\\r\\n.blog-footer {\\r\\n    padding: 2.5rem 0;\\r\\n    color: #999;\\r\\n    text-align: center;\\r\\n    background-color: #f9f9f9;\\r\\n    border-top: .05rem solid #e5e5e5;\\r\\n  }\\r\\n\\r\\n.blog-footer p:last-child {\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      {{title | capitalizesss}}\\n    </div>\\n  </div>\\n  <div class=\\\"blog-post\\\" *ngFor=\\\"let post of posts\\\">\\n    <h2 class=\\\"blog-post-title\\\"><a [routerLink]=\\\"[post.id]\\\">{{post.title}}</a></h2>\\n    <p>{{post.body}}</p>\\n    <hr>\\n  </div>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\ntitle:string = \"about us\";\nposts=[];\n  constructor() { \n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((res) => res.json())\n    .then((data) => this.posts = data)\n    .catch((err) => console.log(err));\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tranproject';\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LeftsidebarComponent } from './leftsidebar/leftsidebar.component';\nimport { RightsidebarComponent } from './rightsidebar/rightsidebar.component';\nimport { ContactComponent } from './contact/contact.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { ServicesComponent } from './services/services.component';\nimport { BlogComponent } from './blog/blog.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { CraeteEmployeeComponent } from './create-employee/create-employee.component';\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { ConfirmEqualValidatorDirective } from './shared/confirm-equal-validator.directive';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OurTeamComponent } from './our-team/our-team.component';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { PostComponent } from './post/post.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent},\n  { path: 'about', component: AboutComponent},\n  { path: 'employees', component: EmployeesComponent},\n  { path: 'services', component: ServicesComponent},\n  { path: 'blog', component: BlogComponent},\n  { path: 'about/:id', component: PostComponent},\n  { path: 'contact', component: ContactComponent},\n  { path: 'create-employee', component: CraeteEmployeeComponent},\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' },\n  \n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LeftsidebarComponent,\n    RightsidebarComponent,\n    ContactComponent,\n    AboutComponent,\n    ServicesComponent,\n    BlogComponent,\n    EmployeesComponent,\n    CraeteEmployeeComponent,\n    ConfirmEqualValidatorDirective,\n    OurTeamComponent,\n    CapitalizePipe,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"wall\\\"><h1>{{title}}</h1></div>\\n<h4>Selected Record</h4>\\n<h3>Name: <span>{{selectedData.selectedName}}</span></h3>\\n<h3>City: <span>{{selectedData.selectedCity}}</span></h3>\\n<h3>Salary: <span>{{selectedData.selectedSalary}}</span></h3>\\n<app-rightsidebar\\n[records]=\\\"record\\\"\\n[employeeName]=\\\"employees.eName\\\"\\n[employeeCity]=\\\"employees.eCity\\\"\\n[employeeSalary]=\\\"employees.eSalary\\\"\\n*ngFor=\\\"let employees of employee\\\"\\n(sendRecord)=\\\"getRecord($event)\\\"\\n>\\n<ng-container class=\\\"heading_part\\\">Employee Records</ng-container> \\n<h4 class=\\\"body_part\\\">The employee records gets display here:</h4>\\n</app-rightsidebar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\npublic title: string = 'Component Communications';\npublic record: string = 'Employee Records';\npublic employee: any= [\n  {eName: 'John', eCity: 'New York', eSalary: 50000},\n  {eName: 'Sam', eCity: 'London', eSalary: 60000},\n  {eName: 'Alex', eCity: 'Wellington', eSalary: 700000 }\n]\n  constructor() { }\n\n  ngOnInit() {\n  }\n  data: string = '';\n  public selectedData: any={\n    selectedName: '',\n    selectedCity: '',\n    selectedSalary: ''\n  };\n  public getRecord(data: any): void{\n    this.selectedData = data;\n  }\n\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizesss'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const val = value.split('');\n    for(let i = 0; i < val.length; i++){\n      let piece = val[i];\n      const j = piece.charAt(0).toUpperCase();\n      val[i] = j + val[i].substr(1).toLowerCase();\n    }\n    return val.join('');\n  }\n\n}\n","module.exports = \".container-fluid{\\r\\n    height: 406px;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Document</title>\\n</head>\\n<body>\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">contact left</div>\\n          <div class=\\\"col-md-6\\\">\\n              <h1>Form</h1>\\n              <form [formGroup]=\\\"contactForm\\\" (ngsubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\">Username</label>\\n                  <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" [ngClass]=\\\"{'is-invalid':submitted && f.name.errors}\\\">\\n                  <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\"></div>\\n                  <div *ngIf=\\\"f.name.errors.required\\\">Username is required</div>\\n                  <div *ngIf=\\\"f.name.errors.minlength\\\">Username should min of 6 character length</div>\\n                </div>\\n           \\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid':submitted && f.email.errors}\\\">\\n                  <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\"></div>\\n                  <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                  <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                </div>\\n           \\n                <button type=\\\"submit\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-success\\\">Submit</button>\\n           \\n              </form>\\n          </div>\\n        </div>\\n    </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  contactForm: FormGroup;\n  submitted = false;\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.contactForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n     if (this.contactForm.invalid) {\n        return;\n    }\n\n    alert('SUCCESS!! :-)')\n}\n\n}\n","module.exports = \".container-fluid{\\r\\n    margin-top: 20px;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Create Component</title>\\n</head>\\n<body>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-2\\\"></div>\\n        <div class=\\\"col-sm-8\\\" style=\\\"background-color:pink;\\\">\\n            <div><h1 class=\\\"text-center\\\">Create Employee</h1></div>\\n            <form #employeeForm= \\\"ngForm\\\" (ngSubmit)=\\\"saveEmployee(employeeForm)\\\">\\n                <div class=\\\"create_form\\\">\\n                  <div class=\\\"jumbotron\\\">\\n                    <div class=\\\"panel panel-primary\\\">\\n                      <div class=\\\"panel-body\\\">\\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"fullNameControl.invalid  && fullNameControl.touched\\\" [class.has-success]=\\\"fullNameControl.valid\\\">\\n                          <label for=\\\"fullname\\\" class=\\\"control-label\\\">Full Name</label>\\n                          <input required type=\\\"text\\\" name=\\\"fullname\\\" [(ngModel)]=\\\"fullname\\\" id=\\\"fullname\\\" class=\\\"form-control\\\" #fullNameControl=\\\"ngModel\\\">\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"fullNameControl.invalid  && fullNameControl.touched\\\">Full Name is required</span>\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"emailControl.invalid\\\" [class.has-success]= \\\"emailControl.valid\\\">\\n                          <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n                          <input [required]=\\\"contactPreferenceControl.value=='email'\\\" [email]=\\\"email!==''\\\" type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" #emailControl=\\\"ngModel\\\">\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"emailControl.errors?.required\\\">Email is required</span>\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"emailControl.errors?.email\\\">Email is invalid</span>\\n                        </div> \\n            \\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"phoneNumberControl.invalid\\\" [class.has-success]= \\\"phoneNumberControl.valid\\\">\\n                          <label for=\\\"phoneNumber\\\">Phone Number</label>\\n                          <input type=\\\"text\\\" [required]=\\\"contactPreferenceControl.value=='phone'\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\" id=\\\"phoneNumber\\\" class=\\\"form-control\\\" #phoneNumberControl=\\\"ngModel\\\">\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"phoneNumberControl.errors?.required\\\">Phone is required</span>\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"contactPreferenceControl.touched && contactPreferenceControl.invalid\\\">\\n                          <label class=\\\"control-label\\\">Contact Preference :</label>\\n                          <div class=\\\"form-control\\\">\\n                            &nbsp;&nbsp;&nbsp;\\n            \\n                            <label class=\\\"radio-inline\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" required #contactPreferenceControl=\\\"ngModel\\\" value=\\\"email\\\" name=\\\"contactPreference\\\" [(ngModel)]=\\\"contactPreference\\\"><span>Email</span> \\n                            </label>\\n            \\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            \\n                            <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" required #contactPreferenceControl=\\\"ngModel\\\" class=\\\"form-check-input\\\" value=\\\"phone\\\" name=\\\"contactPreference\\\" [(ngModel)]=\\\"contactPreference\\\"><span>Phone</span>\\n                            </label>\\n            \\n                          </div>\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"contactPreferenceControl.invalid && contactPreferenceControl.touched \\\">\\n                              Contact Preference is required\\n                          </span>\\n                          {{contactPreferenceControl.value}}\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\" [class.has-error]= \\\"genderControl.invalid  && genderControl.touched\\\">\\n            \\n                          <label class=\\\"control-label\\\">Gender :</label>\\n                          <div class=\\\"form-control\\\">\\n                            &nbsp;&nbsp;&nbsp;\\n                            <label class=\\\"radio-inline\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" required #genderControl=\\\"ngModel\\\" value=\\\"male\\\" name=\\\"gender\\\" [(ngModel)]=\\\"gender\\\"><span>Male</span> \\n                            </label>\\n            \\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n                            <label class=\\\"radio-inline\\\">\\n                              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" value=\\\"female\\\" required #genderControl=\\\"ngModel\\\" name=\\\"gender\\\" [(ngModel)]=\\\"gender\\\"><span>Female</span>\\n                            </label>\\n                          </div>\\n                          <span class=\\\"help-block\\\" *ngIf=\\\"genderControl.invalid  && genderControl.touched\\\">\\n                            Gender is required\\n                          </span>\\n                        </div>\\n            \\n                        <div class=\\\"form-control\\\" [class.has-error]=\\\"isActiveControl.invalid && isActiveControl.touched\\\">\\n                          &nbsp;&nbsp; &nbsp;\\n                          <label class=\\\"checkbox-inline control-label\\\"> \\n                            <input type=\\\"checkbox\\\" [required]=\\\"isActiveControl==null\\\" #isActiveControl=\\\"ngModel\\\" class=\\\"form-check-input\\\" name=\\\"isActive\\\" [(ngModel)]=\\\"isActive\\\" checked><span>Is Active</span>\\n                          </label>\\n                        </div>\\n                        <span class=\\\"help-block\\\" *ngIf=\\\"isActiveControl.touched  && isActiveControl.touched\\\">\\n                            Is Active is Required\\n                          </span>\\n            \\n                        <div class=\\\"form-group\\\" [class.has-error]=\\\"departmentControl.invalid && departmentControl.touched\\\">\\n                            <label for=\\\"department control-label\\\">Department</label>\\n                            <select id=\\\"department\\\" required #departmentControl=\\\"ngModel\\\" name=\\\"department\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"department\\\">\\n                              <option [ngValue]=\\\"null\\\">Select Department</option>\\n                              <option *ngFor=\\\"let debt of departments\\\" [value]=\\\"debt.id\\\">{{debt.name}}</option>\\n                            </select>\\n                            <span class=\\\"help-block\\\" *ngIf=\\\"departmentControl.invalid && departmentControl.touched\\\">\\n                              Department is required\\n                            </span>\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"dateOfBirth\\\">Date of Birth</label>\\n                          <input type=\\\"text\\\"  name=\\\"dateOfBirth\\\" [(ngModel)]=\\\"dateOfBirth\\\" bsDatepicker [bsConfig]=\\\"datePickerConfig\\\" id=\\\"dateOfBirth\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\">\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"photopath\\\">Photo Path</label>\\n                          <input type=\\\"text\\\" name=\\\"photopath\\\" [(ngModel)]=\\\"photopath\\\" id=\\\"photopath\\\" class=\\\"form-control\\\">\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\">\\n                          <button type=\\\"button\\\" (click)=\\\"togglePhoto()\\\" class=\\\"btn btn-primary\\\">{{previewphoto? \\\"Hide\\\" : \\\"Show\\\"}} Preview</button>\\n                        </div>\\n            \\n                        <div class=\\\"form-group\\\">\\n                          <img [src]=\\\"photopath\\\" height=\\\"200\\\" width=\\\"200\\\" *ngIf=\\\"previewphoto\\\">\\n                        </div>\\n            \\n                        <div ngModelGroup=\\\"passwordGroup\\\" [class.has-error]=\\\"CpasswordControl.touched && CpasswordControl.invalid && !CpasswordControl.errors?.required\\\" [class.has-success]= \\\"CpasswordControl.valid\\\">\\n                            <div class=\\\"form-group\\\" [class.has-error]=\\\"passwordControl.invalid\\\" [class.has-success]= \\\"passwordControl.valid\\\">\\n                              <label for=\\\"password\\\">Password</label>\\n                              <input type=\\\"text\\\" required #passwordControl=\\\"ngModel\\\" (input)=\\\"CpasswordControl.control.updateValueAndValidity()\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\">\\n                              <span class=\\\"help-block\\\" *ngIf=\\\"passwordControl.touched && passwordControl.errors?.required\\\">Password is required</span>\\n                            </div>\\n                            \\n                            <div class=\\\"form-group\\\" [class.has-error]=\\\"CpasswordControl.invalid\\\" [class.has-success]= \\\"CpasswordControl.valid\\\">\\n                                <label for=\\\"Cpassword\\\">Confirm Password</label>\\n                                <input type=\\\"text\\\" appConfirmEqualValidator=\\\"password\\\" required #CpasswordControl=\\\"ngModel\\\" name=\\\"Cpassword\\\" [(ngModel)]=\\\"Cpassword\\\" id=\\\"Cpassword\\\" class=\\\"form-control\\\">\\n            \\n                                <span class=\\\"help-block\\\" *ngIf=\\\"CpasswordControl.touched && CpasswordControl.errors?.required\\\">Confirm Password is required</span>\\n            \\n                                <span class=\\\"help-block\\\" *ngIf=\\\"CpasswordControl.touched && CpasswordControl.errors?.notEqual && !Cpassword.errors?.required\\\">Password and Confirm Password does not match</span>\\n                            </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"panel-footer\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"employeeForm.invalid\\\">Save</button>\\n                      </div>\\n                    </div>\\n                  </div>  \\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-sm-2\\\"></div>\\n    </div> \\n  </div>\\n</body>\\n</html>\\n\\nAngular Generated Form Model : {{employeeForm.value | json}}\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Department} from '../models/department.model';\nimport { BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-craete-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CraeteEmployeeComponent implements OnInit {\n  previewphoto = false;\n  dateOfBirth: Date = new Date(2018, 0, 30);\n  datePickerConfig: Partial<BsDatepickerConfig>;\n  //isActive = true;\n  department=null;\n  departments: Department[]= [\n    {id:1, name: 'Web Developer'},\n    {id:2, name: 'Web Designer'},\n    {id:3, name: 'Manager'},\n    {id:4, name:'Hr'},\n  \n  ];\n  constructor() {\n    this.datePickerConfig = Object.assign({}, {\n    containerClass : 'theme-dark-blue',\n    showWeekNumbers: false,\n    minDate: new Date(2018, 0, 1),\n    maxDate: new Date(2018, 11, 31),\n    dateInputFormat: \"DD/MM/YYYY\"\n    });\n   }\n\n   togglePhoto(){\n     this.previewphoto =! this.previewphoto;\n   }\n\n  ngOnInit() {\n  }\n\n  saveEmployee(empForm: NgForm):void{\n      console.log(empForm.value);\n  }\n\n}\n","module.exports = \".images_bx{\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n}\\r\\n.text-center{\\r\\n    margin-top: 30px;\\r\\n    margin-bottom: 20px;\\r\\n    font-size: 28px;\\r\\n}\\r\\n.well{\\r\\n    background: #e1e4ea;\\r\\n    font-size: 30px;\\r\\n    padding: 12px 12px;\\r\\n}\\r\\n.panel-title{\\r\\n    margin-left: 25px;\\r\\n}\\r\\n.jumbotron{\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.text-right{\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Employees List</title>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"text_emp\\\">\\n        <h1 class=\\\"well well-lg\\\">Employee List</h1>\\n      </div>\\n      <div class=\\\"text-right\\\">\\n        <a routerLink=\\\"/create-employee\\\"><button type=\\\"button\\\" class=\\\"btn btn-info btn-lg\\\" >Create New Employee</button></a>\\n      </div>\\n        <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let employee of employees\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">{{employee.name}}</h3>\\n          </div>\\n          <div class=\\\"jumbotron\\\">\\n            <div class=\\\"panel-body\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-4\\\">\\n                    <img class=\\\"images_bx\\\" [src] =\\\"employee.photoPath\\\"/>\\n                  </div>\\n                  <div class=\\\"col-sm-8\\\">\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>Gender</h3>\\n                      </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>: {{employee.gender}}</h3>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>Email</h3>\\n                      </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>: {{employee.email}}</h3>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>Department</h3>\\n                      </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>: {{employee.department}}</h3>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>Is Active</h3>\\n                      </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>: {{employee.isActive}}</h3>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>Date of Birth</h3>\\n                      </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <h3>: {{employee.dateOfBirth | date }}</h3>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>  \\n        </div>\\n    </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../models/employee.model';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n  employees: Employee[] = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@gmail.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'Manager',\n      isActive: true,\n      photoPath: 'assets/images/employee/mark.jpg'\n    },\n\n    {\n      id: 2,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'john@gmail.com',\n      dateOfBirth: new Date('10/25/1989'),\n      department: 'Web developer',\n      isActive: true,\n      photoPath: 'assets/images/employee/john.jpg'\n    },\n\n    {\n      id: 3,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Email',\n      email: 'mary@gmail.com',\n      dateOfBirth: new Date('10/25/1990'),\n      department: 'Hr',\n      isActive: true,\n      photoPath: 'assets/images/employee/mary.jpg'\n    },\n\n    {\n      id: 4,\n      name: 'Sam',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'Sam@gmail.com',\n      dateOfBirth: new Date('10/25/1991'),\n      department: 'Web Designer',\n      isActive: true,\n      photoPath: 'assets/images/employee/sam.jpg'\n    },\n\n    {\n      id: 5,\n      name: 'Paul',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'paul@gmail.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: '',\n      isActive: true,\n      photoPath: 'assets/images/employee/paul.jpg'\n    },\n\n    {\n      id: 6,\n      name: 'Emma',\n      gender: 'Female',\n      contactPreference: 'Email',\n      email: 'emma@gmail.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'Team Leader',\n      isActive: true,\n      photoPath: 'assets/images/employee/emma.jpg'\n    },\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container-fluid{\\r\\n    background: #0bb2b2;\\r\\n    height: 125px;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Document</title>\\n</head>\\n<body>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm\\\"><h3>Footer1</h3></div>\\n      <div class=\\\"col-sm\\\"><h3>Footer2</h3></div>\\n      <div class=\\\"col-sm\\\"><h3>Footer3</h3></div>\\n      <div class=\\\"col-sm\\\"><h3>Footer4</h3></div>\\n    </div>\\n  </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"*{\\r\\n\\tmargin: 0;\\r\\n}\\r\\n.container-fluid{\\r\\n\\tbackground: #0bb2b2;\\r\\n}\\r\\n.header_main img{\\r\\n\\twidth: 140px;\\r\\n\\theight: 130px;\\r\\n\\tfloat: left;\\r\\n}\\r\\nnav{\\r\\n\\tfloat: left;\\r\\n\\tmargin-left: 190px;\\r\\n\\tmargin-top: 50px;\\r\\n}\\r\\nli{\\r\\n\\tfloat: left;\\r\\n\\tlist-style: none;\\r\\n\\tpadding: 2px 28px;\\r\\n}\\r\\nli a{\\r\\n\\tcolor: black;\\r\\n\\tfont-size: 25px;\\r\\n}\\r\\n.active{\\r\\n\\tcolor: white !important;\\r\\n}\\r\\n.nav-link {\\r\\n    padding: 0rem 0rem !important; \\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n\\t<title>Header Section</title>\\n</head>\\n<body>\\n\\t<div class=\\\"container-fluid\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"header_main\\\">\\n\\t\\t\\t\\t<img src=\\\"assets/images/angular.png\\\">\\n\\t\\t\\t\\t<nav>\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li><a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">About</a></li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"dropdown\\\"><a class=\\\"nav-link dropdown-toggle\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">Employee</a>\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/employees\\\" class=\\\"dropdown-item\\\">Employees</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a routerLink=\\\"/create-employee\\\" class=\\\"dropdown-item\\\">Create Employee</a>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t<li><a routerLink=\\\"/services\\\" routerLinkActive=\\\"active\\\">Services</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a routerLink=\\\"/blog\\\" routerLinkActive=\\\"active\\\">Blog</a></li>\\n\\t\\t\\t\\t\\t\\t<li><a routerLink=\\\"/contact\\\" routerLinkActive=\\\"active\\\">Contact</a></li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</nav>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".d-block{\\r\\n    height: 650px;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Document</title>\\n</head>\\n<body>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n            <ol class=\\\"carousel-indicators\\\">\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n              <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n            </ol>\\n            <div class=\\\"carousel-inner\\\">\\n              <div class=\\\"carousel-item active\\\">\\n                <img class=\\\"d-block w-100\\\" src=\\\"assets/images/Slider1.jpg\\\" alt=\\\"First slide\\\">\\n              </div>\\n              <div class=\\\"carousel-item\\\">\\n                <img class=\\\"d-block w-100\\\" src=\\\"assets/images/Slider2.jpg\\\" alt=\\\"Second slide\\\">\\n              </div>\\n              <div class=\\\"carousel-item\\\">\\n                <img class=\\\"d-block w-100\\\" src=\\\"assets/images/Slider3.jpg\\\" alt=\\\"Third slide\\\">\\n              </div>\\n            </div>\\n            <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n              <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n              <span class=\\\"sr-only\\\">Previous</span>\\n            </a>\\n            <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n              <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n              <span class=\\\"sr-only\\\">Next</span>\\n            </a>\\n          </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\" style=\\\"background-color:yellow;\\\"><app-leftsidebar></app-leftsidebar></div>\\n        <div class=\\\"col-sm-6\\\" style=\\\"background-color:orange;\\\"><app-rightsidebar></app-rightsidebar></div>\\n    </div>\\n\\n   <h1>{{childMessage}}</h1>\\n   <app-leftsidebar [showData]=\\\"data\\\"></app-leftsidebar>\\n  </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public data = \"hello, friend good morning\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  leftsidebar works! {{showData}}\\n</p>\\n\\n\\n\"","import { Component, OnInit, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-leftsidebar',\n  templateUrl: './leftsidebar.component.html',\n  styleUrls: ['./leftsidebar.component.css']\n})\nexport class LeftsidebarComponent implements OnInit {\n\n  @Input() public showData:string; \n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  our-team works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-our-team',\n  templateUrl: './our-team.component.html',\n  styleUrls: ['./our-team.component.css']\n})\nexport class OurTeamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <h1>Post</h1>\\n    </div>\\n  </div>\\n  <div class=\\\"blog-post\\\">\\n    <h2 class=\\\"blog-post-title\\\">{{post.title}}</h2>\\n    <p>{{post.body}}</p>\\n    <hr>\\n  </div>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  id: number= 0;\n  post={};\n  constructor(private route: ActivatedRoute) {\n    this.route.params.subscribe(res => this.id = res.id);\n    fetch(\"https://jsonplaceholder.typicode.com/posts/\"+this.id)\n    .then((res) => res.json())\n    .then((data) => this.post = data)\n    .catch((err) => console.log(err))\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"span{\\r\\n    color: green;\\r\\n    font-size:18px;\\r\\n}\"","module.exports = \"<h3>{{empRecord}}</h3>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n            <ng-content select=\\\".heading_part\\\"> </ng-content>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <ng-content select=\\\".body_part\\\"> </ng-content>\\r\\n        <h3>Name: <span>{{employeeName}}</span></h3>\\r\\n        <h3>City: <span>{{employeeCity}}</span></h3>\\r\\n        <h3>Salary: <span>{{employeeSalary}}</span></h3>\\r\\n        <button (click)=\\\"emitsendRecord()\\\">Select Record</button>\\r\\n        <hr>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter  } from '@angular/core';\n\n@Component({\n  selector: 'app-rightsidebar',\n  templateUrl: './rightsidebar.component.html',\n  styleUrls: ['./rightsidebar.component.css']\n})\nexport class RightsidebarComponent implements OnInit {\n\n @Input('records') empRecord: string;\n @Input() employeeName: string;\n @Input() employeeCity: string;\n @Input() employeeSalary: string;\n @Output() sendRecord: EventEmitter<any> = new EventEmitter();\n  public emitsendRecord(){\n\n    let selectedEmplobj: any= {\n      selectedName: this.employeeName,\n      selectedCity: this.employeeCity,\n      selectedSalary: this.employeeSalary\n    }\n    this.sendRecord.emit(selectedEmplobj);\n  }\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"Name: <input type=\\\"text\\\" (keyup)=\\\"onNameKeyUp($event)\\\">\\n<button (click)=\\\"getProfile()\\\">Get Profile</button>\\n<br/>\\n<div *ngIf=\\\"found\\\">\\n  <span>{{name}}'s age is {{age}}</span>\\n</div>\\n\\n--------------------------\\n<button (click)=\\\"postProfile()\\\">Post Profile</button>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n  constructor(private httpClient:HttpClient) { }\n  name:string= '';\n  age:number;\n  found:boolean;\n  onNameKeyUp(event:any){\n    this.name = event.target.value;\n    this.found= false; \n  }\n\n  getProfile(){\n    this.httpClient.get(`https://my-json-server.typicode.com/techsithgit/json-faker-directory/profiles/?name=${this.name}`)\n    .subscribe(\n      (data: any[]) =>{\n        if(data.length){\n          this.age= data[0].age;\n          this.found = true;\n        }\n      }\n    )\n  }\n\n  postProfile(){\n    this.httpClient.post(`https://my-json-server.typicode.com/techsithgit/json-faker-directory/profiles/`,{\n      name:'mark',\n      age:25\n\n    })\n    .subscribe(\n      (data: any) =>{\n       console.log(data);\n      }\n    )\n  }\n  ngOnInit() {\n  }\n\n}\n","import {Validator, NG_VALIDATORS, AbstractControl} from '@angular/forms';\r\nimport {Directive, Input} from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[appConfirmEqualValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: ConfirmEqualValidatorDirective, \r\n        multi: true\r\n    }]\r\n})\r\n\r\nexport class ConfirmEqualValidatorDirective implements Validator {\r\n    @Input() appConfirmEqualValidator: string;\r\n    validate(control: AbstractControl): { [key:string]: any } | null{\r\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidator);\r\n        if(controlToCompare && controlToCompare.value !== control.value){\r\n            return{ 'notEqual' : true};\r\n        }\r\n\r\n        return null;\r\n    }\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}